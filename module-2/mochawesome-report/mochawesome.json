{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-05T14:24:53.471Z",
    "end": "2022-10-05T14:24:53.486Z",
    "duration": 15,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2a703a49-f5c4-430a-a75c-ed651ddc188a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87878bab-55dc-4fac-8863-b65985d4617d",
          "title": "getEvenNumbersFromArray",
          "fullFile": "C:\\Users\\Dzmitry_Petukh\\Desktop\\js-atm-program-master\\module-2\\tests\\getEvenNumbersFromArray.test.js",
          "file": "\\tests\\getEvenNumbersFromArray.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"before each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "fe030e71-86f6-450e-b1bd-0a91f1a7ce80",
              "parentUUID": "87878bab-55dc-4fac-8863-b65985d4617d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return an array of even numbers when provided with proper data",
              "fullTitle": "getEvenNumbersFromArray should return an array of even numbers when provided with proper data",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfRandomNumbers = [2, 7, 12, 17, 1, 55, 32, 10];\nexpect(validator.getEvenNumbersFromArray(arrayOfRandomNumbers)).to.be.eql([2, 12, 32, 10]);",
              "err": {},
              "uuid": "2121f18c-44da-4013-86ac-654a37a7d2e2",
              "parentUUID": "87878bab-55dc-4fac-8863-b65985d4617d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when one or more elements of the array is not a number",
              "fullTitle": "getEvenNumbersFromArray should throw an error when one or more elements of the array is not a number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomArray = [2, 7, null, 12, 20, 11];\nexpect(() => validator.getEvenNumbersFromArray(randomArray)).to.throw(`2,7,,12,20,11] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "68bca803-2f09-4e75-9e2e-7a8512212004",
              "parentUUID": "87878bab-55dc-4fac-8863-b65985d4617d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2121f18c-44da-4013-86ac-654a37a7d2e2",
            "68bca803-2f09-4e75-9e2e-7a8512212004"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
          "title": "isNumberEven",
          "fullFile": "C:\\Users\\Dzmitry_Petukh\\Desktop\\js-atm-program-master\\module-2\\tests\\isNumberEven.test.js",
          "file": "\\tests\\isNumberEven.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven\"",
              "fullTitle": "isNumberEven \"before each\" hook in \"isNumberEven\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "8daf03be-1ddd-4301-855e-c4e81833f54d",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven\"",
              "fullTitle": "isNumberEven \"after each\" hook in \"isNumberEven\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "6ef1f3e7-08fd-453f-bc85-e711d34bc930",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true if number is even",
              "fullTitle": "isNumberEven should return true if number is even",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isNumberEven(4)).to.be.equal(true);",
              "err": {},
              "uuid": "333086c7-4750-42d7-97ea-2dc3b37ad0ef",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if number is odd",
              "fullTitle": "isNumberEven should return false if number is odd",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isNumberEven(5)).to.be.equal(false);",
              "err": {},
              "uuid": "0441fc53-f0f4-4a7a-989f-d621816e36d0",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided with undefined",
              "fullTitle": "isNumberEven should throw an error when provided with undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven(undefined)).to.throw('[undefined] is not of type \"Number\" it is of type \"undefined\"');",
              "err": {},
              "uuid": "5145f36b-3f52-4017-a6fa-586c12f0c311",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided with null",
              "fullTitle": "isNumberEven should throw an error when provided with null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven(null)).to.throw('[null] is not of type \"Number\" it is of type \"object\"');",
              "err": {},
              "uuid": "73faea5d-9e9f-4f3b-9cc0-12052c834e19",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided with boolean",
              "fullTitle": "isNumberEven should throw an error when provided with boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven(false)).to.throw('[false] is not of type \"Number\" it is of type \"boolean\"');",
              "err": {},
              "uuid": "b774fd58-e0a7-4c22-b8e9-06735f95dc50",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided with a string",
              "fullTitle": "isNumberEven should throw an error when provided with a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven('2')).to.throw('[2] is not of type \"Number\" it is of type \"string\"');",
              "err": {},
              "uuid": "7c203cde-906f-45b7-8f60-81be5b61c3c8",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an errow when provided with an array",
              "fullTitle": "isNumberEven should throw an errow when provided with an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven([2, 4])).to.throw('[2,4] is not of type \"Number\" it is of type \"object\"');",
              "err": {},
              "uuid": "259130b1-bc77-4087-8c14-bfaa177e4103",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an errow when provided with an object",
              "fullTitle": "isNumberEven should throw an errow when provided with an object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven({ 1: 1 })).to.throw('[[object Object]] is not of type \"Number\" it is of type \"object\"');",
              "err": {},
              "uuid": "9eed1d1f-9af7-462e-90f3-37dfca18509a",
              "parentUUID": "d97d9ab0-0e7b-4c54-af1f-e94692e37332",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "333086c7-4750-42d7-97ea-2dc3b37ad0ef",
            "0441fc53-f0f4-4a7a-989f-d621816e36d0",
            "5145f36b-3f52-4017-a6fa-586c12f0c311",
            "73faea5d-9e9f-4f3b-9cc0-12052c834e19",
            "b774fd58-e0a7-4c22-b8e9-06735f95dc50",
            "7c203cde-906f-45b7-8f60-81be5b61c3c8",
            "259130b1-bc77-4087-8c14-bfaa177e4103",
            "9eed1d1f-9af7-462e-90f3-37dfca18509a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}